<?php
/**
 * Copyright Â© Lyra Network.
 * This file is part of PayZen plugin for OpenMage. See COPYING.md for license details.
 *
 * @author    Lyra Network (https://www.lyra.com/)
 * @copyright Lyra Network
 * @license   https://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */
?>

<p><b>
    <?php echo $this->getMethod()->getTitle(); ?>

    <?php
    $info = $this->getInfo();
    $option = @unserialize($info->getAdditionalData()); // Get choosen payment option if any.

    if (stripos($info->getMethod(), 'payzen_multi') === 0) {
        if (! isset($option) || empty($option)) {
            // Temporary patch for module versions < 1.3 that use additional_information field
            $option = $info->getAdditionalInformation(Lyranetwork_Payzen_Helper_Payment::MULTI_OPTION);
        }

        if (is_array($option) && ! empty($option)) {
            echo '<br />';
            echo $option['label'] . ' (' . $option['count'] . 'X)';
        }
    } elseif (stripos($info->getMethod(), 'payzen_other') === 0) {
        if (is_array($option) && ! empty($option)) {
            echo '<br />';
            echo $option['label'] . ' (' . $option['means'] . ')';
        }
    }
    ?>
</b></p>

<?php
if ($info->getCcTransId()) {
    echo nl2br($this->getResultDescription());
    echo '<br />';

    echo Mage::helper('payzen')->__('Transaction ID') . ': ' . $info->getCcTransId();
    echo '<br />';

    if ($info->getCcType() === 'MULTI') {
        echo $this->getTransactionInfoHtml();
    } else {
        if (stripos($info->getMethod(), 'payzen_multi') === false) {
            echo Mage::helper('payzen')->__('Transaction UUID') . ': ' . $info->getAdditionalInformation(Lyranetwork_Payzen_Helper_Payment::TRANS_UUID);
            echo '<br />';
        }

        echo Mage::helper('payzen')->__('Means of Payment') . ': ' . $info->getCcType();

        $userChoice = $info->getAdditionalInformation(Lyranetwork_Payzen_Helper_Payment::BRAND_USER_CHOICE);
        if ($userChoice === true) {
            echo ' ' . Mage::helper('payzen')->__('(card brand chosen by buyer)');
        } elseif ($userChoice === false) {
            echo ' ' . Mage::helper('payzen')->__('(default card brand used)');
        }

        echo '<br />';

        if ($info->getCcNumberEnc()) {
            echo Mage::helper('payzen')->__('Card Number') . ': ' . $info->getCcNumberEnc();
            echo '<br />';

            $expiry = '';
            if ($info->getCcExpMonth() && $info->getCcExpYear()) {
                $expiry = str_pad($info->getCcExpMonth(), 2, '0', STR_PAD_LEFT) . ' / ' . $info->getCcExpYear();
            }

            echo Mage::helper('payzen')->__('Expiration Date') . ': ' . $expiry;
            echo '<br />';
        }

        echo Mage::helper('payzen')->__('3DS Authentication') . ': ';
        if ($threedsStatus = $info->getAdditionalInformation('threeds_status')) {
            echo $threedsStatus;
            echo '<br />';
            echo ($threedsCavv = $info->getCcSecureVerify()) ? Mage::helper('payzen')->__('3DS Certificate') . ': ' . $threedsCavv : '';
            echo '<br />';
            echo ($threedsAuthType = $info->getAdditionalInformation('threeds_auth_type')) ? Mage::helper('payzen')->__('Authentication Type') . ': ' . $threedsAuthType : '';
        } else {
            echo 'UNAVAILABLE';
        }
    }

    $riskControl = $info->getAdditionalInformation(Lyranetwork_Payzen_Helper_Payment::RISK_CONTROL);
    if (is_array($riskControl) && ! empty($riskControl)) {
        echo '<br />';
        echo Mage::helper('payzen')->__('Fraud Control Result') . ': ';

        $colors = array(
            'OK' => '#4F8A10',
            'WARNING' => '#9F6000',
            'ERROR' => '#D8000C'
        );

        foreach ($riskControl as $key => $value) {
            echo '<br />&nbsp;&nbsp;- ' . $this->translate($key, 'risk_control') . ': ';
            echo '<span style="color: ' . $colors[$value].';">' . $value . '</span>';
        }
    }

    $riskAssessment = $info->getAdditionalInformation(Lyranetwork_Payzen_Helper_Payment::RISK_ASSESSMENT);
    if (is_array($riskAssessment) && ! empty($riskAssessment)) {
        echo '<br />';
        echo Mage::helper('payzen')->__('Advanced Risk Assessment Result') . ': ';

        foreach ($riskAssessment as $value) {
            echo '<br />&nbsp;&nbsp;- ' . $this->translate($value, 'risk_assessment');
        }
    }

    echo '<br />';
}